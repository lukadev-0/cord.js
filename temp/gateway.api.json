{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.19.4",
    "schemaVersion": 1004,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      }
    }
  },
  "kind": "Package",
  "canonicalReference": "@cordjs/gateway!",
  "docComment": "/**\n * Connect to the gateway with Cord.js\n *\n * @remarks\n *\n * This plugin uses {@link https://discord.js.org/ | Discord.js} under the hood.\n *\n * @packageDocumentation\n */\n",
  "name": "@cordjs/gateway",
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@cordjs/gateway!",
      "name": "",
      "members": [
        {
          "kind": "Variable",
          "canonicalReference": "@cordjs/gateway!Gateway:var",
          "docComment": "/**\n * Gateway plugin\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "Gateway: "
            },
            {
              "kind": "Content",
              "text": "<N extends {\n    readonly gateway?: string | undefined;\n} = {}>(options: "
            },
            {
              "kind": "Reference",
              "text": "GatewayOptions",
              "canonicalReference": "@cordjs/gateway!GatewayOptions:interface"
            },
            {
              "kind": "Content",
              "text": " & {\n    middleware?: N | undefined;\n}) => {\n    id: string;\n    helpers: import(\"@cordjs/bot\")."
            },
            {
              "kind": "Reference",
              "text": "CordPluginHelpers",
              "canonicalReference": "@cordjs/bot!CordPluginHelpers:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    decorateBot(bot: "
            },
            {
              "kind": "Reference",
              "text": "CordBot",
              "canonicalReference": "@cordjs/bot!CordBot:class"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "CordBot",
              "canonicalReference": "@cordjs/bot!CordBot:class"
            },
            {
              "kind": "Content",
              "text": " & import(\"@cordjs/bot\")."
            },
            {
              "kind": "Reference",
              "text": "RenameFields",
              "canonicalReference": "@cordjs/bot!RenameFields:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "GatewayMiddleware",
              "canonicalReference": "@cordjs/gateway!GatewayMiddleware:type"
            },
            {
              "kind": "Content",
              "text": ", N>;\n    start: (() => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<void>) | undefined;\n    preStart: (() => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<void>) | undefined;\n}"
            }
          ],
          "releaseTag": "Public",
          "name": "Gateway",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 18
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@cordjs/gateway!GatewayContext:class",
          "docComment": "/**\n * The context\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class GatewayContext<K extends "
            },
            {
              "kind": "Content",
              "text": "keyof "
            },
            {
              "kind": "Reference",
              "text": "ClientEvents",
              "canonicalReference": "discord.js!ClientEvents:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "Context",
              "canonicalReference": "@cordjs/bot!Context:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "K",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "GatewayContext",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@cordjs/gateway!GatewayContext:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `GatewayContext` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(path: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ", data: "
                },
                {
                  "kind": "Reference",
                  "text": "ClientEvents",
                  "canonicalReference": "discord.js!ClientEvents:interface"
                },
                {
                  "kind": "Content",
                  "text": "[K]"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "path",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "data",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@cordjs/gateway!GatewayContext#data:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "data: "
                },
                {
                  "kind": "Reference",
                  "text": "ClientEvents",
                  "canonicalReference": "discord.js!ClientEvents:interface"
                },
                {
                  "kind": "Content",
                  "text": "[K]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "data",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 4,
            "endIndex": 6
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cordjs/gateway!GatewayMiddleware:type",
          "docComment": "/**\n * {@link Gateway} middleware\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type GatewayMiddleware = "
            },
            {
              "kind": "Content",
              "text": "{\n    gateway: "
            },
            {
              "kind": "Reference",
              "text": "MiddlewareGroup",
              "canonicalReference": "@cordjs/bot!MiddlewareGroup:type"
            },
            {
              "kind": "Content",
              "text": "<{\n        [K in keyof "
            },
            {
              "kind": "Reference",
              "text": "ClientEvents",
              "canonicalReference": "discord.js!ClientEvents:interface"
            },
            {
              "kind": "Content",
              "text": "]: "
            },
            {
              "kind": "Reference",
              "text": "Middleware",
              "canonicalReference": "@cordjs/bot!Middleware:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "GatewayContext",
              "canonicalReference": "@cordjs/gateway!GatewayContext:class"
            },
            {
              "kind": "Content",
              "text": "<K>>;\n    }>;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "GatewayMiddleware",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 10
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@cordjs/gateway!GatewayOptions:interface",
          "docComment": "/**\n * Gateway options\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface GatewayOptions "
            }
          ],
          "releaseTag": "Public",
          "name": "GatewayOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@cordjs/gateway!GatewayOptions#catchAll:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "catchAll?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "catchAll",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@cordjs/gateway!GatewayOptions#client:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "client: "
                },
                {
                  "kind": "Reference",
                  "text": "ClientOptions",
                  "canonicalReference": "discord.js!ClientOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Client",
                  "canonicalReference": "discord.js!Client:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "client",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            }
          ],
          "extendsTokenRanges": []
        }
      ]
    }
  ]
}
