{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.18.19",
    "schemaVersion": 1004,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      }
    }
  },
  "kind": "Package",
  "canonicalReference": "@cordjs/client!",
  "docComment": "/**\n * Cord.js Client, the main class for any Cord.js bot\n *\n * @packageDocumentation\n */\n",
  "name": "@cordjs/client",
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@cordjs/client!",
      "name": "",
      "members": [
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cordjs/client!AnyPlugin:type",
          "docComment": "/**\n * {@link ClientPlugin} with default type parameters\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type AnyPlugin = "
            },
            {
              "kind": "Reference",
              "text": "ClientPlugin",
              "canonicalReference": "@cordjs/client!ClientPlugin:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, "
            },
            {
              "kind": "Reference",
              "text": "Middleware",
              "canonicalReference": "@cordjs/client!Middleware:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Context",
              "canonicalReference": "@cordjs/client!Context:class"
            },
            {
              "kind": "Content",
              "text": ">>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "AnyPlugin",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@cordjs/client!BaseClient:class",
          "docComment": "/**\n * The main class for any Cord.js bot\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class BaseClient "
            }
          ],
          "releaseTag": "Public",
          "name": "BaseClient",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@cordjs/client!BaseClient:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `BaseClient` class\n *\n * @param options - the options\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(options: "
                },
                {
                  "kind": "Reference",
                  "text": "ClientOptions",
                  "canonicalReference": "@cordjs/client!ClientOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@cordjs/client!BaseClient#middleware:member",
              "docComment": "/**\n * The middleware\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly middleware: "
                },
                {
                  "kind": "Reference",
                  "text": "MiddlewareInterface",
                  "canonicalReference": "@cordjs/client!MiddlewareInterface:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Context",
                  "canonicalReference": "@cordjs/client!Context:class"
                },
                {
                  "kind": "Content",
                  "text": ">[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "middleware",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@cordjs/client!BaseClient#plugin:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "plugin<T extends "
                },
                {
                  "kind": "Content",
                  "text": "string | typeof "
                },
                {
                  "kind": "Reference",
                  "text": "ClientPlugin",
                  "canonicalReference": "@cordjs/client!ClientPlugin:class"
                },
                {
                  "kind": "Content",
                  "text": ">(id: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "(T extends string ? "
                },
                {
                  "kind": "Reference",
                  "text": "AnyPlugin",
                  "canonicalReference": "@cordjs/client!AnyPlugin:type"
                },
                {
                  "kind": "Content",
                  "text": " : T) | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "plugin"
            },
            {
              "kind": "Property",
              "canonicalReference": "@cordjs/client!BaseClient#plugins:member",
              "docComment": "/**\n * The plugins\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly plugins: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, "
                },
                {
                  "kind": "Reference",
                  "text": "AnyPlugin",
                  "canonicalReference": "@cordjs/client!AnyPlugin:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "plugins",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@cordjs/client!BaseClient#start:member(1)",
              "docComment": "/**\n * Start the client\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "start(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "start"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@cordjs/client!ClientOptions:interface",
          "docComment": "/**\n * Options for the Client\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ClientOptions "
            }
          ],
          "releaseTag": "Public",
          "name": "ClientOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@cordjs/client!ClientOptions#plugins:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "plugins: "
                },
                {
                  "kind": "Reference",
                  "text": "AnyPlugin",
                  "canonicalReference": "@cordjs/client!AnyPlugin:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "plugins",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@cordjs/client!ClientPlugin:class",
          "docComment": "/**\n * A plugin\n *\n * @typeParam TMiddleware - the middleware\n *\n * @typeParam TOptions - The options\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class ClientPlugin<TMiddleware extends "
            },
            {
              "kind": "Content",
              "text": "{\n    [x: string]: "
            },
            {
              "kind": "Reference",
              "text": "Middleware",
              "canonicalReference": "@cordjs/client!Middleware:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Context",
              "canonicalReference": "@cordjs/client!Context:class"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": ", TOptions extends "
            },
            {
              "kind": "Reference",
              "text": "PluginOptions",
              "canonicalReference": "@cordjs/client!PluginOptions:interface"
            },
            {
              "kind": "Content",
              "text": "<TMiddleware> "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Reference",
              "text": "PluginOptions",
              "canonicalReference": "@cordjs/client!PluginOptions:interface"
            },
            {
              "kind": "Content",
              "text": "<TMiddleware>"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TMiddleware",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TOptions",
              "constraintTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "defaultTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 12
              }
            }
          ],
          "name": "ClientPlugin",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@cordjs/client!ClientPlugin:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `ClientPlugin` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(options: "
                },
                {
                  "kind": "Content",
                  "text": "TOptions"
                },
                {
                  "kind": "Content",
                  "text": ", defaultMiddleware: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadonlyArray",
                  "canonicalReference": "!ReadonlyArray:interface"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        [K in keyof TMiddleware]: K;\n    }[keyof TMiddleware]>"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "defaultMiddleware",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  }
                }
              ]
            },
            {
              "kind": "IndexSignature",
              "canonicalReference": "@cordjs/client!ClientPlugin:index(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "[x: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "]: "
                },
                {
                  "kind": "Reference",
                  "text": "Middleware",
                  "canonicalReference": "@cordjs/client!Middleware:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Context",
                  "canonicalReference": "@cordjs/client!Context:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@cordjs/client!ClientPlugin#client:member",
              "docComment": "/**\n * The client\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "client?: "
                },
                {
                  "kind": "Reference",
                  "text": "BaseClient",
                  "canonicalReference": "@cordjs/client!BaseClient:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "client",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@cordjs/client!ClientPlugin#extendClient:member(1)",
              "docComment": "/**\n * Extends the client class, based on {@link https://www.typescriptlang.org/docs/handbook/mixins.html}.\n *\n * @param base - base class\n *\n * @returns Modified client which extends `base`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "extendClient(base: "
                },
                {
                  "kind": "Content",
                  "text": "typeof "
                },
                {
                  "kind": "Reference",
                  "text": "BaseClient",
                  "canonicalReference": "@cordjs/client!BaseClient:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ExtendedClient",
                  "canonicalReference": "@cordjs/client!ExtendedClient:type"
                },
                {
                  "kind": "Content",
                  "text": "<TMiddleware>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "base",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                }
              ],
              "name": "extendClient"
            },
            {
              "kind": "Property",
              "canonicalReference": "@cordjs/client!ClientPlugin#id:member",
              "docComment": "/**\n * The unique identifier of the plugin.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract readonly id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@cordjs/client!ClientPlugin#init:member(1)",
              "docComment": "/**\n * Runs during {@link createClient} after the client has been constructed\n *\n * @param client - the client\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "init(client: "
                },
                {
                  "kind": "Reference",
                  "text": "BaseClient",
                  "canonicalReference": "@cordjs/client!BaseClient:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "client",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "init"
            },
            {
              "kind": "Property",
              "canonicalReference": "@cordjs/client!ClientPlugin#middleware:member",
              "docComment": "/**\n * The middleware this plugin defines\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly middleware: "
                },
                {
                  "kind": "Reference",
                  "text": "PluginMiddlewareMap",
                  "canonicalReference": "@cordjs/client!PluginMiddlewareMap:type"
                },
                {
                  "kind": "Content",
                  "text": "<TMiddleware>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "middleware",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@cordjs/client!ClientPlugin#options:member",
              "docComment": "/**\n * The options\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly options: "
                },
                {
                  "kind": "Content",
                  "text": "TOptions"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "options",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@cordjs/client!ClientPlugin#pluginRunMiddleware:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected pluginRunMiddleware(context: "
                },
                {
                  "kind": "Reference",
                  "text": "Context",
                  "canonicalReference": "@cordjs/client!Context:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "pluginRunMiddleware"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cordjs/client!ClientPlugin#preStart:member(1)",
              "docComment": "/**\n * Runs before `start`\n *\n * @virtual\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "preStart(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "preStart"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cordjs/client!ClientPlugin#start:member(1)",
              "docComment": "/**\n * Runs after `preStart`\n *\n * @virtual\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "start(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "start"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cordjs/client!ClientWithPlugins:type",
          "docComment": "/**\n * A client with the specified plugins\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ClientWithPlugins<T extends "
            },
            {
              "kind": "Reference",
              "text": "AnyPlugin",
              "canonicalReference": "@cordjs/client!AnyPlugin:type"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "BaseClient",
              "canonicalReference": "@cordjs/client!BaseClient:class"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "UnionToIntersection",
              "canonicalReference": "@cordjs/client!UnionToIntersection:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "PluginExtendedClient",
              "canonicalReference": "@cordjs/client!PluginExtendedClient:type"
            },
            {
              "kind": "Content",
              "text": "<T>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ClientWithPlugins",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 9
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@cordjs/client!Context:class",
          "docComment": "/**\n * Information about a middleware call, passed in as first argument to a middleware handler\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class Context "
            }
          ],
          "releaseTag": "Public",
          "name": "Context",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@cordjs/client!Context:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `Context` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(path: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "path",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@cordjs/client!Context#path:member",
              "docComment": "/**\n * The middleware path\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "path: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "path",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@cordjs/client!createClient:function(1)",
          "docComment": "/**\n * Creates a client with the specified plugins\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function createClient<T extends "
            },
            {
              "kind": "Reference",
              "text": "PluginConstructor",
              "canonicalReference": "@cordjs/client!PluginConstructor:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "AnyPlugin",
              "canonicalReference": "@cordjs/client!AnyPlugin:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ">(plugins: "
            },
            {
              "kind": "Reference",
              "text": "CreateClientPlugins",
              "canonicalReference": "@cordjs/client!CreateClientPlugins:type"
            },
            {
              "kind": "Content",
              "text": "<T>[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "ClientWithPlugins",
              "canonicalReference": "@cordjs/client!ClientWithPlugins:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "InstanceType",
              "canonicalReference": "!InstanceType:type"
            },
            {
              "kind": "Content",
              "text": "<T>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 13
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "plugins",
              "parameterTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "createClient"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cordjs/client!CreateClientPlugins:type",
          "docComment": "/**\n * The plugins parameter passed into {@link createClient}\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type CreateClientPlugins<T extends "
            },
            {
              "kind": "Reference",
              "text": "PluginConstructor",
              "canonicalReference": "@cordjs/client!PluginConstructor:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "AnyPlugin",
              "canonicalReference": "@cordjs/client!AnyPlugin:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "T | [T, "
            },
            {
              "kind": "Reference",
              "text": "ConstructorParameters",
              "canonicalReference": "!ConstructorParameters:type"
            },
            {
              "kind": "Content",
              "text": "<T>[0]]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "CreateClientPlugins",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 6,
            "endIndex": 9
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cordjs/client!ExtendedClient:type",
          "docComment": "/**\n * Type that represents an extended client\n *\n * @typeParam T - the extended members\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ExtendedClient<T> = "
            },
            {
              "kind": "Content",
              "text": "new () => T & "
            },
            {
              "kind": "Reference",
              "text": "BaseClient",
              "canonicalReference": "@cordjs/client!BaseClient:class"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ExtendedClient",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cordjs/client!Middleware:type",
          "docComment": "/**\n * A middleware\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type Middleware<T extends "
            },
            {
              "kind": "Reference",
              "text": "Context",
              "canonicalReference": "@cordjs/client!Context:class"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "(handler: "
            },
            {
              "kind": "Reference",
              "text": "MiddlewareHandler",
              "canonicalReference": "@cordjs/client!MiddlewareHandler:interface"
            },
            {
              "kind": "Content",
              "text": "<T>) => void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "Middleware",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cordjs/client!MiddlewareGroup:type",
          "docComment": "/**\n * A group of middleware\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type MiddlewareGroup<T extends "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, "
            },
            {
              "kind": "Reference",
              "text": "Middleware",
              "canonicalReference": "@cordjs/client!Middleware:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Context",
              "canonicalReference": "@cordjs/client!Context:class"
            },
            {
              "kind": "Content",
              "text": ">>"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "(<K extends keyof T>(name: K, ...args: "
            },
            {
              "kind": "Reference",
              "text": "Parameters",
              "canonicalReference": "!Parameters:type"
            },
            {
              "kind": "Content",
              "text": "<T[K]> | []) => T[K]) & {\n    [K in keyof T]: T[K];\n} & (<K extends keyof T>(...args: "
            },
            {
              "kind": "Reference",
              "text": "Parameters",
              "canonicalReference": "!Parameters:type"
            },
            {
              "kind": "Content",
              "text": "<T[K]>) => void)"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "MiddlewareGroup",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 8,
            "endIndex": 13
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@cordjs/client!MiddlewareHandler:interface",
          "docComment": "/**\n * A middleware handler\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface MiddlewareHandler<T extends "
            },
            {
              "kind": "Reference",
              "text": "Context",
              "canonicalReference": "@cordjs/client!Context:class"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "MiddlewareHandler",
          "members": [
            {
              "kind": "CallSignature",
              "canonicalReference": "@cordjs/client!MiddlewareHandler:call(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(context: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ", next: "
                },
                {
                  "kind": "Reference",
                  "text": "NextFn",
                  "canonicalReference": "@cordjs/client!NextFn:type"
                },
                {
                  "kind": "Content",
                  "text": ", err: "
                },
                {
                  "kind": "Content",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "next",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "err",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ]
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@cordjs/client!MiddlewareInterface:interface",
          "docComment": "/**\n * A middleware object\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface MiddlewareInterface<T extends "
            },
            {
              "kind": "Reference",
              "text": "Context",
              "canonicalReference": "@cordjs/client!Context:class"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "MiddlewareInterface",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@cordjs/client!MiddlewareInterface#cb:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cb: "
                },
                {
                  "kind": "Reference",
                  "text": "MiddlewareHandler",
                  "canonicalReference": "@cordjs/client!MiddlewareHandler:interface"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "cb",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@cordjs/client!MiddlewareInterface#path:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "path: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "path",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cordjs/client!NextFn:type",
          "docComment": "/**\n * The `next` function passed into {@link MiddlewareHandler}\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type NextFn = "
            },
            {
              "kind": "Content",
              "text": "(err?: unknown) => void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "NextFn",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cordjs/client!PluginConstructor:type",
          "docComment": "/**\n * Plugin constructor\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type PluginConstructor<T extends "
            },
            {
              "kind": "Reference",
              "text": "AnyPlugin",
              "canonicalReference": "@cordjs/client!AnyPlugin:type"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "(new () => T) | (new (options: any) => T)"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "PluginConstructor",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cordjs/client!PluginExtendedClient:type",
          "docComment": "/**\n * Gets the instance type of {@link ClientPlugin.extendClient}\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type PluginExtendedClient<T extends "
            },
            {
              "kind": "Reference",
              "text": "AnyPlugin",
              "canonicalReference": "@cordjs/client!AnyPlugin:type"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "InstanceType",
              "canonicalReference": "!InstanceType:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ReturnType",
              "canonicalReference": "!ReturnType:type"
            },
            {
              "kind": "Content",
              "text": "<T['extendClient']>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "PluginExtendedClient",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 7
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cordjs/client!PluginMiddlewareMap:type",
          "docComment": "/**\n * Middleware Map\n *\n * @typeParam TMiddleware - the middleware\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type PluginMiddlewareMap<TMiddleware extends "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, "
            },
            {
              "kind": "Reference",
              "text": "Middleware",
              "canonicalReference": "@cordjs/client!Middleware:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Context",
              "canonicalReference": "@cordjs/client!Context:class"
            },
            {
              "kind": "Content",
              "text": ">>"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "{\n    [K in keyof TMiddleware]: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "PluginMiddlewareMap",
          "typeParameters": [
            {
              "typeParameterName": "TMiddleware",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 8,
            "endIndex": 9
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@cordjs/client!PluginOptions:interface",
          "docComment": "/**\n * Base plugin options\n *\n * @typeParam TMiddleware - the middleware\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface PluginOptions<TMiddleware extends "
            },
            {
              "kind": "Content",
              "text": "{\n    [x: string]: "
            },
            {
              "kind": "Reference",
              "text": "Middleware",
              "canonicalReference": "@cordjs/client!Middleware:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Context",
              "canonicalReference": "@cordjs/client!Context:class"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TMiddleware",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "PluginOptions",
          "members": [
            {
              "kind": "IndexSignature",
              "canonicalReference": "@cordjs/client!PluginOptions:index(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "[x: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "]: "
                },
                {
                  "kind": "Reference",
                  "text": "Middleware",
                  "canonicalReference": "@cordjs/client!Middleware:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Context",
                  "canonicalReference": "@cordjs/client!Context:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@cordjs/client!PluginOptions#middleware:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "middleware?: "
                },
                {
                  "kind": "Reference",
                  "text": "PluginMiddlewareMap",
                  "canonicalReference": "@cordjs/client!PluginMiddlewareMap:type"
                },
                {
                  "kind": "Content",
                  "text": "<TMiddleware>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "middleware",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        }
      ]
    }
  ]
}
